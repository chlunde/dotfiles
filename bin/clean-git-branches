#!/bin/bash

git checkout main || git checkout master
git pull
git fetch -p

git branch -r | awk '{print $1}' | egrep -v -f /dev/fd/0 <(git branch -vv | grep origin) | awk '{print $1}' | xargs --no-run-if-empty git branch -d
git branch -av | grep gone | awk '{ print $1 }' | xargs --no-run-if-empty git branch -D

git log --branches --not --remotes --format='%D'

for branch in $(git branch -l --format="%(refname:short)"); do
    if [[ $branch == "master" ]] || [[ $branch == "main" ]]; then
        continue
    fi
    h1=$(git rev-parse "$branch")
    TRACKING_BRANCH=$(git config "branch.$branch.merge")
    TRACKING_REMOTE=$(git config branch.$branch.remote)

    r="${TRACKING_BRANCH/heads/remotes\/$TRACKING_REMOTE}"
    echo "$TRACKING_REMOTE $TRACKING_BRANCH $r"

    if [[ -n $TRACKING_BRANCH ]]; then
        h2=$(git rev-parse "$r")

        if [[ $h1 == "$h2" ]]; then
            git branch -D "$branch"
        fi
    fi
done

#git log --branches --not --remotes --format='%D'
git log --branches --not --remotes --simplify-by-decoration --decorate --oneline --format='%D'
git log --branches --not --remotes --simplify-by-decoration --decorate --oneline
